import{a2 as z,r as v,a8 as J,a as $,a3 as j,a9 as N}from"./index.d22ee9a3.js";const O=[],D=z("mqtt",()=>{const l=v({url:"",username:"",password:""}),o=v({}),f=v([{label:"",children:[],selectable:!1,id:"__ROOT__"}]);J(()=>{f.value[0].label=l.value.url});function g(e,n){const t=e.split("/");let s=f.value[0],y=[];t.forEach((m,d)=>{const p=d===t.length-1;if(y.push(m),p&&m==="config"&&t[0]==="homeassistant"){const r=JSON.parse(o.value[e]);r.device.identifiers[0].startsWith("zigbee2mqtt")&&(s.parent.avatar="logos/zigbee2mqtt.png",s.parent.type="zigbee2mqtt",s.type="zigbee2mqtt"),s.parent.header="homeassistant-discovery",s.parent.label=`${r.device.name} - ${r.device.manufacturer} ${r.device.model} [${s.parent.labelPart}]`}if(p&&m==="config"&&t[0]==="tasmota"){const r=JSON.parse(o.value[e]);s.header="tasmota-discovery",s.body="tasmota-discovery",s.device=r}const T=s.children.find(r=>r.labelPart===m);if(T)s=T,p&&(s.selectable=p);else{const r={label:m,labelPart:m,children:[],selectable:p,id:y.join("/"),parent:s,type:s.type};r.id==="zigbee2mqtt"&&(r.avatar="logos/zigbee2mqtt.png",r.type="zigbee2mqtt"),r.id==="homeassistant"&&(r.avatar="logos/homeassistant.svg"),["tasmota","tele","cmnd","stat"].includes(r.id)&&(r.avatar="logos/tasmota.svg"),s.children.push(r),s.children.sort((P,C)=>P.label.localeCompare(C.label)),s=r}})}function w(e){const n=e.split("/");let t=f.value[0];n.forEach((s,y)=>{if(y===n.length-1)for(t.children=t.children.filter(d=>d.id!==e);t.parent;)t.children.length===0&&(t.parent.children=t.parent.children.filter(d=>d.id!==t.id)),t=t.parent;else{const d=t.children.find(p=>p.labelPart===s);d&&(t=d)}})}const b=v(!1),q=v(null);function S(){window.mqtt.connect({url:l.value.url,username:l.value.username,password:l.value.password},(e,n)=>{if(e===null){Object.prototype.hasOwnProperty.call(n,"connected")&&(b.value=n.connected),Object.prototype.hasOwnProperty.call(n,"error")&&(q.value=n.error);return}n?(o.value[e]=n,g(e)):(w(e),delete o.value[e]),O.forEach(t=>{e.match(t.topic)&&t.callback(e,n)})})}function h(e){return Object.keys(o.value).filter(n=>n.match(e))}function _(){window.mqtt.disconnect()}function E(e,n,t={}){window.mqtt.publish(e,n,t)}function i(e,n){const t={topic:e,callback:n};return O.push(t),t}function a(e){O.splice(O.indexOf(e),1)}const c=$(()=>h("zigbee2mqtt/").reduce((e,n)=>{const t=n.split("/").slice(0,2).join("/");return e.includes(t)||e.push(t),e},[]).length),u=$(()=>h("homeassistant/").reduce((e,n)=>{const t=n.split("/")[2];return e.includes(t)||e.push(t),e},[]).length);return{config:l,isConnected:b,topics:o,topicsTree:f,zigbee2mqttCount:c,homeassistantCount:u,connect:S,disconnect:_,publish:E,subscribe:i,unsubscribe:a,searchTopics:h}}),R=z("homeassistant",()=>{const l=D(),o=v([]);function f(i){const a=JSON.parse(JSON.stringify(i.config));return i.entities.map(c=>{const u=JSON.parse(JSON.stringify(c.config));return u.device=a,{topic:`homeassistant/${c.type}/${i.id}/${c.id}/config`,message:JSON.stringify(u,null,2)}})}function g(i){f(i).forEach(({topic:a,message:c})=>{l.publish(a,c,{retain:!0})})}function w(){o.value.forEach(g)}function b(i){const a=`0x${Math.random().toString(36).substring(2,15)}`,c={id:a,config:{identifiers:[`mqtt_${a}`],manufacturer:"",model:"",name:""},entities:[]};o.value.push(i||c)}function q(i,a){const c={type:"sensor",id:"temperature",config:{name:"",state_topic:"",state_class:"measurement",device_class:"temperature",unit_of_measurement:"\xB0C",value_template:`{% if value_json.temperature is defined %}
  {{ value_json.temperature }}
{% else %}
  {{ states(entity_id) }}
{% endif %}
`}};a.entities||(a.entities=[]),a.entities.push(i||c)}function S(i){o.value=[];const a={id:i,entities:[]};o.value.push(a),l.searchTopics(new RegExp(`homeassistant/.*/${i}/.*/config`)).forEach(c=>{const u=JSON.parse(l.topics[c]);a.config=u.device,delete u.device;const e=c.split("/");a.entities.push({type:e[1],id:e[3],config:u})}),j.push("/discovery-generator")}function h(){N.create({title:"Confirm",message:"Remove all devices and entities?",cancel:!0,persistent:!0}).onOk(()=>{o.value=[]})}function _(i){N.create({title:"Confirm",message:"Remove device and entities?",cancel:!0,persistent:!0}).onOk(()=>{o.value.splice(o.value.indexOf(i),1)})}function E(i,a){N.create({title:"Confirm",message:"Remove entity?",cancel:!0,persistent:!0}).onOk(()=>{i.entities.splice(i.entities.indexOf(a),1)})}return{devices:o,addDevice:b,addEntityToDevice:q,reverseEntity:S,removeAll:h,removeDevice:_,removeDeviceEntity:E,toDiscoveryEntries:f,publishDevice:g,publishAllDevices:w}});export{R as a,D as u};
